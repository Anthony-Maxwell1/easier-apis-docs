{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Easier Apis By Anthony Maxwell Table of Contents Introduction Requirements Installation Guide Usage FAQ License Introduction Easier APIs is a platform based on express that allows you to make apis easily. Requirements Node.js 18.17.0 or above Express 4.19.0 or above Multer 2.0.0-rc.1 or above Installation Guide npm install easier-apis : It's that simple. Usage Easier Apis is based on the library express, and uses multer for file managment. Begin by importing Easier Apis and Express: const easierApis = require('easier-apis'); const express = require('express'); Initialize an application and api for both: const app = express(); const api = easierApis(); Now, link the express app to the api. api.attach(app); You are now attached, and can use the api! You can setup an enpoint by calling the endpoint function as follows: api.endpoint({ url: \"/endpoint/:parameter\" }, (req, res, params) => { res.send(`you entered the parameter: ${params.parameter}`); }); You will need to run the express app as normal: app.listen(3000, () => console.log('Server running on port 3000')); FAQ (Frequently Asked Questions) There is currently no FAQs, as this is the first version. Submit issues on the github, and questions on Stack Overflow or other sites tagged #easierApis License Easier Apis by Anthony Maxwell is licensed under CC BY-SA 4.0 You are free to: Share: copy and redistribute the material in any medium or format for any purpose, even commercially. Adapt: remix, transform, and build upon the material for any purpose, even commercially. The licensor cannot revoke these freedoms as long as you follow under the following license terms: Attribution: You must give appropriate credit , provide a link to the license, and indicate if changes were made . You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use. ShareAlike: If you remix, transform, or build upon the material, you must distribute your contributions under the same license as the original. You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits. No warranties are given. The license may not give you all of the permissions necessary for your intended use. For example, other rights such as publicity, privacy, or moral rights may limit how you use the material.","title":"Home"},{"location":"#easier-apis","text":"","title":"Easier Apis"},{"location":"#by-anthony-maxwell","text":"","title":"By Anthony Maxwell"},{"location":"#table-of-contents","text":"Introduction Requirements Installation Guide Usage FAQ License","title":"Table of Contents"},{"location":"#introduction","text":"Easier APIs is a platform based on express that allows you to make apis easily.","title":"Introduction"},{"location":"#requirements","text":"Node.js 18.17.0 or above Express 4.19.0 or above Multer 2.0.0-rc.1 or above","title":"Requirements"},{"location":"#installation-guide","text":"npm install easier-apis : It's that simple.","title":"Installation Guide"},{"location":"#usage","text":"Easier Apis is based on the library express, and uses multer for file managment. Begin by importing Easier Apis and Express: const easierApis = require('easier-apis'); const express = require('express'); Initialize an application and api for both: const app = express(); const api = easierApis(); Now, link the express app to the api. api.attach(app); You are now attached, and can use the api! You can setup an enpoint by calling the endpoint function as follows: api.endpoint({ url: \"/endpoint/:parameter\" }, (req, res, params) => { res.send(`you entered the parameter: ${params.parameter}`); }); You will need to run the express app as normal: app.listen(3000, () => console.log('Server running on port 3000'));","title":"Usage"},{"location":"#faq-frequently-asked-questions","text":"There is currently no FAQs, as this is the first version. Submit issues on the github, and questions on Stack Overflow or other sites tagged #easierApis","title":"FAQ (Frequently Asked Questions)"},{"location":"#license","text":"Easier Apis by Anthony Maxwell is licensed under CC BY-SA 4.0 You are free to: Share: copy and redistribute the material in any medium or format for any purpose, even commercially. Adapt: remix, transform, and build upon the material for any purpose, even commercially. The licensor cannot revoke these freedoms as long as you follow under the following license terms: Attribution: You must give appropriate credit , provide a link to the license, and indicate if changes were made . You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use. ShareAlike: If you remix, transform, or build upon the material, you must distribute your contributions under the same license as the original. You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits. No warranties are given. The license may not give you all of the permissions necessary for your intended use. For example, other rights such as publicity, privacy, or moral rights may limit how you use the material.","title":"License"},{"location":"endpoints/","text":"Easier Apis - Endpoints Usage The endpoint function is used to set an api endpoint, that can be used in a client or fetched by a browser. Syntax (* required) api.endpoint({ parameters }*, callback*); The callback is defined using: (req*, res*, params*, file, filename) => {} All Parameters (* required) url* (Simple, its the endpoint.) acceptFile (Which accepts file from the request, and places it in the fileLocation, if true) fileLocation (default: 'uploads/') fileName (default: date + time, to prevent conflicts) fileType (default: 'any') origin ( This restricts to only one origin ) originMessage (default: 'Permission Denied', this is the data sent back to the client when the origin does not match. ) { url: \"/endpoint/\", acceptFile: false, fileLocation:'images/jpg', fileName: \"testFile.jpg\". fileType: \"image/jpeg\", origin: \"localhost:3000\", originMessage: \"No access.\"} Static Endpoints Static endpoints can be defined by calling staticendpoint() and perform the same function as an endpoint, but returns a static value. Here are all the parameters: - url* (Simple, its the endpoint.) - origin ( This restricts to only one origin ) - originMessage (default: 'Permission Denied', this is the data sent back to the client when the origin does not match. ) api.staticendpoint({ url: '/endpoint/'*, origin: 'loaclhost:3000', originMessage: 'No access.'}, 'hello!')","title":"Endpoints"},{"location":"endpoints/#easier-apis-endpoints","text":"","title":"Easier Apis - Endpoints"},{"location":"endpoints/#usage","text":"The endpoint function is used to set an api endpoint, that can be used in a client or fetched by a browser.","title":"Usage"},{"location":"endpoints/#syntax-required","text":"api.endpoint({ parameters }*, callback*); The callback is defined using: (req*, res*, params*, file, filename) => {}","title":"Syntax (* required)"},{"location":"endpoints/#all-parameters-required","text":"url* (Simple, its the endpoint.) acceptFile (Which accepts file from the request, and places it in the fileLocation, if true) fileLocation (default: 'uploads/') fileName (default: date + time, to prevent conflicts) fileType (default: 'any') origin ( This restricts to only one origin ) originMessage (default: 'Permission Denied', this is the data sent back to the client when the origin does not match. ) { url: \"/endpoint/\", acceptFile: false, fileLocation:'images/jpg', fileName: \"testFile.jpg\". fileType: \"image/jpeg\", origin: \"localhost:3000\", originMessage: \"No access.\"}","title":"All Parameters (* required)"},{"location":"endpoints/#static-endpoints","text":"Static endpoints can be defined by calling staticendpoint() and perform the same function as an endpoint, but returns a static value. Here are all the parameters: - url* (Simple, its the endpoint.) - origin ( This restricts to only one origin ) - originMessage (default: 'Permission Denied', this is the data sent back to the client when the origin does not match. ) api.staticendpoint({ url: '/endpoint/'*, origin: 'loaclhost:3000', originMessage: 'No access.'}, 'hello!')","title":"Static Endpoints"}]}